name: build
on: [push]

jobs:
  build:

    name: ubuntu
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install GTest
        run: sudo apt-get install libgtest-dev -y 

      - name: Install lcov
        run: sudo apt install lcov
        
      - name: Install Clang-tidy
        run: sudo apt-get install -y clang-tidy

      - name: Install Scan-build  
        run: sudo apt-get install -y clang-tools

      - name: Install cppcheck
        run: sudo apt update && sudo apt install cppcheck
 
      - name: Install Cpplint
        run: sudo apt-get install python3-pip && pip install --user cpplint

      - name: install fbinfer
        run: VERSION=1.1.0; curl -sSL "https://github.com/facebook/infer/releases/download/v$VERSION/infer-linux64-v$VERSION.tar.xz" | sudo tar -C /opt -xJ && sudo ln -s "/opt/infer-linux64-v$VERSION/bin/infer" /usr/local/bin/infer
        
      - name: scan-build  clang-tidy
        run: mkdir build && cd build && scan-build cmake .. && scan-build make
        
      - name: cppcheck
        run: cppcheck src tests  --enable=all --error-exitcode=1 -I project/include --suppress=missingIncludeSystem
        
      - name: Cpplint
        run: cpplint --extensions=c,h --filter=-runtime/references,-legal/copyright,-build/include_subdir,-whitespace/line_length,-readability/casting project/src/* project/include/* && cpplint --extensions=cpp --filter=-runtime/references,-legal/copyright,-build/include_subdir,-whitespace/line_length,-readability/casting tests/*

      - name: Tests
        run: cd tests && cmake .. && make  && ./run_tests && cmake -Dparallel=ON .. && make && ./run_tests && cd .. && lcov -t "hw1" -o hw1.info -c -d . && lcov --remove hw1.info "/usr/include/*" "./include/*" "/usr/local/*" > coverage.info && genhtml -o report coverage.info

      - name: Valgrind install
        run: sudo apt-get update && sudo apt-get install -y valgrind 

      - name: Valgrind 
        run: mkdir valgrind_tests && cd valgrind_tests && cmake .. && make && valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all -s -q ./run_tests &&  cmake -Dparallel=ON .. && make &&  valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all -s -q ./run_tests

      - name: Sanitizers address
        run: cd build && cmake -Daddress=ON -Dparallel=OFF .. && make  && cmake -Daddress=ON -Dparallel=ON .. && make  

      - name: Sanitizers memory
        run: cd build && cmake -Dmemory=ON .. && make  && cmake -Dmemory=ON .. && make
        
      - name: Sanitizers undefined
        run: cd build && cmake -Dundefined=ON .. && make  && cmake -Dundefined=ON .. && make

      - name: Sanitizers thread
        run: cd build && cmake -Dthread=ON .. && make && cmake -Dthread=ON .. && make

      - name: run with fbinfer
        run: mkdir infer_build && cd infer_build && cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 .. && cd .. && infer run --compilation-database infer_build/compile_commands.json

      - name: coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: report




      

      
